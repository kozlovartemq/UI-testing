{"name": "test_register_form", "status": "broken", "statusDetails": {"message": "AttributeError: 'RegisterPage' object has no attribute 'is_present'", "trace": "self = <tests.test_register_page.TestRegisterPage object at 0x03D09AF0>\n\n    @allure.story(\"Проверка возможности регистрации пользователя при корректно заполненных данных\")\n    def test_register_form(self):\n        \"\"\"Verifying the ability to register\"\"\"\n        register = RegisterPage(self.driver)\n        register.fill_email(\"randomemail\" + str(random.randint(111, 1111)) + \"@gmail.com\")\n        register.click_create_button()\n        assert register.check_register_form_appears(), \"A Register form didn't appear.\"\n        register.select_sex()\n        register.fill_first_name(\"Abra\")\n        register.fill_last_name(\"Cadabra\")\n        register.fill_password(\"QwErTyUi\")\n>       register.select_day_dropdown_list_by_random_value()\n\ntests\\test_register_page.py:24: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\npages\\register_page.py:54: in select_day_dropdown_list_by_random_value\n    select = self._get_select_list('xpath', RegisterPageLocators.select_days)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <pages.register_page.RegisterPage object at 0x03D25C28>\nfind_by = 'xpath', locator = \"//select[@id='days']\"\n\n    def _get_select_list(self, find_by: str, locator: str):\n>       return Select(self.is_present(find_by, locator))\nE       AttributeError: 'RegisterPage' object has no attribute 'is_present'\n\nbase\\seleniumbase.py:60: AttributeError"}, "description": "Verifying the ability to register", "steps": [{"name": "Заполнение email", "status": "passed", "parameters": [{"name": "email", "value": "'randomemail973@gmail.com'"}], "start": 1642510830045, "stop": 1642510830212}, {"name": "Клик по кнопке \"Create an account\"", "status": "passed", "start": 1642510830212, "stop": 1642510830584}, {"name": "Проверка: форма регистрации появилась", "status": "passed", "start": 1642510830585, "stop": 1642510835814}, {"name": "Выбор пола", "status": "passed", "parameters": [{"name": "sex", "value": "'Male'"}], "start": 1642510835814, "stop": 1642510836064}, {"name": "Заполнение имени", "status": "passed", "parameters": [{"name": "first_name", "value": "'Abra'"}], "start": 1642510836064, "stop": 1642510836464}, {"name": "Заполнение фамилии", "status": "passed", "parameters": [{"name": "second_name", "value": "'Cadabra'"}], "start": 1642510836464, "stop": 1642510836534}, {"name": "Заполнение пароля", "status": "passed", "parameters": [{"name": "password", "value": "'QwErTyUi'"}], "start": 1642510836534, "stop": 1642510836604}, {"name": "Выбор дня рождения", "status": "broken", "statusDetails": {"message": "AttributeError: 'RegisterPage' object has no attribute 'is_present'\n", "trace": "  File \"C:\\Users\\Artem Kozlov\\AppData\\Local\\Programs\\Python\\Python38-32\\lib\\site-packages\\allure_commons\\_allure.py\", line 172, in impl\n    return func(*a, **kw)\n  File \"C:\\Users\\Artem Kozlov\\PycharmProjects\\POM_Selenium_Pytest_Task1\\pages\\register_page.py\", line 54, in select_day_dropdown_list_by_random_value\n    select = self._get_select_list('xpath', RegisterPageLocators.select_days)\n  File \"C:\\Users\\Artem Kozlov\\PycharmProjects\\POM_Selenium_Pytest_Task1\\base\\seleniumbase.py\", line 60, in _get_select_list\n    return Select(self.is_present(find_by, locator))\n"}, "start": 1642510836604, "stop": 1642510836604}], "attachments": [{"name": "Screenshot", "source": "cbbdb9cc-4119-4074-a4f2-bc87650d381a-attachment.png", "type": "image/png"}, {"name": "stdout", "source": "8cdac6c3-b1f5-4a59-a3bf-d242f82a5d77-attachment.txt", "type": "text/plain"}], "start": 1642510819326, "stop": 1642510836604, "uuid": "a035981b-4a20-4b52-a1fb-49f9312617fd", "historyId": "e95028b50be6c41cc121289dd539764d", "testCaseId": "d3056713067663ae09230e5bdde7de3a", "fullName": "tests.test_register_page.TestRegisterPage#test_register_form", "labels": [{"name": "story", "value": "Проверка возможности регистрации пользователя при корректно заполненных данных"}, {"name": "severity", "value": "blocker"}, {"name": "feature", "value": "Тест формы регистрации"}, {"name": "tag", "value": "@pytest.mark.usefixtures('web_driver_init')"}, {"name": "parentSuite", "value": "tests"}, {"name": "suite", "value": "test_register_page"}, {"name": "subSuite", "value": "TestRegisterPage"}, {"name": "host", "value": "ArtemKozlov"}, {"name": "thread", "value": "1448-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.test_register_page"}]}